name: Yocto (kas) — QEMU

on:
  workflow_dispatch: {}  

concurrency:
  group: yocto-kas-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # (선택) Yocto 캐시: 네트워크/시간 절약
      - name: Restore DL & SSTATE caches
        uses: actions/cache@v4
        with:
          path: |
            build/downloads
            build/sstate-cache
          key: yocto-${{ runner.os }}-${{ hashFiles('**/*.yml', '**/*.yaml') }}
          restore-keys: |
            yocto-${{ runner.os }}-

      # kas 전용 액션: 내부적으로 컨테이너 실행 + 권한/UID 정리까지 처리
      - name: Build via kas-action
        uses: kas-project/kas-action@v2
        with:
          file: qemu.yml            # 리포 루트에 qemu.yml이 있을 때
          # target: core-image-sato # 필요시 지정 (qemu.yml target에 이미 있으면 생략 가능)
          ssh_auth_sock: false      # SSH 키 안 쓰면 false 유지

      # 산출물 업로드 (필요한 경로만)
      - name: Upload deploy artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: yocto-deploy
          path: |
            build/tmp/deploy/images/**/*
          if-no-files-found: warn
          retention-days: 7

